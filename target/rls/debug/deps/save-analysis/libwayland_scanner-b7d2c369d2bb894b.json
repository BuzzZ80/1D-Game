{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4","program":"/home/buzz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_scanner","--edition=2018","/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b7d2c369d2bb894b","-C","extra-filename=-b7d2c369d2bb894b","--out-dir","/home/buzz/1dgame-clone/target/rls/debug/deps","-L","dependency=/home/buzz/1dgame-clone/target/rls/debug/deps","--extern","proc_macro2=/home/buzz/1dgame-clone/target/rls/debug/deps/libproc_macro2-b8f4ecc64162b286.rmeta","--extern","quote=/home/buzz/1dgame-clone/target/rls/debug/deps/libquote-8b0278d36c736049.rmeta","--extern","xml=/home/buzz/1dgame-clone/target/rls/debug/deps/libxml-ca4c6c9c6efaba70.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/buzz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/buzz/1dgame-clone/target/rls/debug/deps/libwayland_scanner-b7d2c369d2bb894b.rmeta"},"prelude":{"crate_id":{"name":"wayland_scanner","disambiguator":[5550915084450880761,0]},"crate_root":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src","external_crates":[{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/c_code_gen.rs","num":20,"id":{"name":"proc_macro2","disambiguator":[10877327301744002335,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/c_code_gen.rs","num":21,"id":{"name":"proc_macro","disambiguator":[17355562761581328522,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/c_code_gen.rs","num":22,"id":{"name":"unicode_ident","disambiguator":[13320254083904757865,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/c_code_gen.rs","num":23,"id":{"name":"quote","disambiguator":[12466097846862071601,0]}},{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/parse.rs","num":24,"id":{"name":"xml","disambiguator":[10750656397322280229,0]}}],"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":0,"byte_end":7484,"line_start":1,"line_end":203,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3817,"byte_end":3821,"line_start":103,"line_end":103,"column_start":15,"column_end":19},"alias_span":null,"name":"Side","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":0,"byte_end":7484,"line_start":1,"line_end":203,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":62},{"krate":0,"index":99},{"krate":0,"index":175},{"krate":0,"index":213},{"krate":0,"index":238},{"krate":0,"index":255},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294}],"decl_id":null,"docs":" Wayland scanner crate","sig":null,"attributes":[{"value":"/ Wayland scanner crate","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":30,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is a rust equivalent of the wayland-scanner tool from the","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":34,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ official wayland C library.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":107,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":139,"byte_end":142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ You can use in your build script to generate the rust code for any","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":143,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ wayland protocol file, to use alongside the `wayland_client` and","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":214,"byte_end":282,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ `wayland_server` crate to build your applications.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":283,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## How to use this crate","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":342,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":371,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate is to be used in a build script. It provides the function `generate_code`.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":375,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ It'll allow you to generate the code to use with the `wayland_client` or","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":465,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ `wayland_server` crates for any XML wayland protocol file (NB: you don't","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":542,"byte_end":618,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ need to do it for the core protocol, which is already included in both crates).","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":619,"byte_end":702,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":703,"byte_end":706,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ First, have the XML files you want to use in your project, somewhere the build script","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":707,"byte_end":796,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ will be able to read them.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":797,"byte_end":827,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":828,"byte_end":831,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Then, you'll need to invoke `generate_code` for each of these files.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":832,"byte_end":904,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":905,"byte_end":908,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A sample build script:","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":909,"byte_end":935,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":936,"byte_end":939,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":940,"byte_end":953,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ extern crate wayland_scanner;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":954,"byte_end":987,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":988,"byte_end":991,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use std::env::var;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":992,"byte_end":1014,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1015,"byte_end":1039,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ use wayland_scanner::{Side, generate_code};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1044,"byte_end":1091,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1092,"byte_end":1095,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Location of the xml file, relative to the `Cargo.toml`","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1096,"byte_end":1157,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/ let protocol_file = \"./my_protocol.xml\";","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1158,"byte_end":1202,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1203,"byte_end":1206,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Target directory for the generate files","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1207,"byte_end":1253,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let out_dir_str = var(\"OUT_DIR\").unwrap();","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1254,"byte_end":1300,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ let out_dir = Path::new(&out_dir_str);","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1301,"byte_end":1343,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ generate_code(","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1348,"byte_end":1366,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     protocol_file,","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1367,"byte_end":1389,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/     out_dir.join(\"my_protocol_api.rs\"),","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1390,"byte_end":1433,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/     Side::Client, // Replace by `Side::Server` for server-side code","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1434,"byte_end":1505,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ );","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1506,"byte_end":1512,"line_start":44,"line_end":44,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1513,"byte_end":1520,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1521,"byte_end":1524,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The above example will output a `.rs` file in the `OUT_DIR` defined by","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1525,"byte_end":1599,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ cargo. Then, you'll need to include this generated file (using the","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1600,"byte_end":1670,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ macro of the same name) to make this code available in your crate.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1671,"byte_end":1741,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1742,"byte_end":1745,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1746,"byte_end":1759,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/ // The generated code will import stuff from wayland_commons","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1760,"byte_end":1824,"line_start":52,"line_end":52,"column_start":1,"column_end":65}},{"value":"/ extern crate wayland_commons;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1825,"byte_end":1858,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ extern crate wayland_client;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1859,"byte_end":1891,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Re-export only the actual code, and then only use this re-export","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1896,"byte_end":1967,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ // The `generated` module below is just some boilerplate to properly isolate stuff","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":1968,"byte_end":2054,"line_start":57,"line_end":57,"column_start":1,"column_end":87}},{"value":"/ // and avoid exposing internal details.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2055,"byte_end":2098,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/ //","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2099,"byte_end":2105,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/ // You can use all the types from my_protocol as if they went from `wayland_client::protocol`.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2106,"byte_end":2204,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ pub use generated::client as my_protocol;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2205,"byte_end":2250,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2251,"byte_end":2254,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ mod generated {","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2255,"byte_end":2274,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/     // The generated code tends to trigger a lot of warnings","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2275,"byte_end":2339,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/     // so we isolate it into a very permissive module","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2340,"byte_end":2397,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/     #![allow(dead_code,non_camel_case_types,unused_unsafe,unused_variables)]","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2398,"byte_end":2478,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/     #![allow(non_upper_case_globals,non_snake_case,unused_imports)]","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2479,"byte_end":2550,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2551,"byte_end":2554,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     pub mod client {","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2555,"byte_end":2579,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/         // These imports are used by the generated code","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2580,"byte_end":2639,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/         pub(crate) use wayland_client::{Main, Attached, Proxy, ProxyMap, AnonymousObject};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2640,"byte_end":2734,"line_start":71,"line_end":71,"column_start":1,"column_end":95}},{"value":"/         pub(crate) use wayland_commons::map::{Object, ObjectMetadata};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2735,"byte_end":2809,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/         pub(crate) use wayland_commons::{Interface, MessageGroup};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2810,"byte_end":2880,"line_start":73,"line_end":73,"column_start":1,"column_end":71}},{"value":"/         pub(crate) use wayland_commons::wire::{Argument, MessageDesc, ArgumentType, Message};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2881,"byte_end":2978,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/         pub(crate) use wayland_commons::smallvec;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":2979,"byte_end":3032,"line_start":75,"line_end":75,"column_start":1,"column_end":54}},{"value":"/         pub(crate) use wayland_client::protocol::{$($import),*};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3033,"byte_end":3101,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/         pub(crate) use wayland_client::sys;","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3102,"byte_end":3149,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/         // If you protocol interacts with objects from other protocols, you'll need to import","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3150,"byte_end":3247,"line_start":78,"line_end":78,"column_start":1,"column_end":98}},{"value":"/         // their modules, like so:","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3248,"byte_end":3286,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/         pub(crate) use wayland_client::protocol::{wl_surface, wl_region};","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3287,"byte_end":3364,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_code.rs\"));","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3365,"byte_end":3436,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3437,"byte_end":3446,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3447,"byte_end":3452,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3453,"byte_end":3460,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3462,"byte_end":3484,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":3548,"byte_end":3591,"line_start":88,"line_end":88,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83557,"byte_end":83563,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Client","qualname":"::side::Side::Client","value":"Side::Client","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" wayland client applications\n","sig":null,"attributes":[{"value":"/ wayland client applications","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83521,"byte_end":83552,"line_start":11,"line_end":11,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83597,"byte_end":83603,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Server","qualname":"::side::Side::Server","value":"Side::Server","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" wayland compositors\n","sig":null,"attributes":[{"value":"/ wayland compositors","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83569,"byte_end":83592,"line_start":13,"line_end":13,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":425},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83510,"byte_end":83514,"line_start":10,"line_end":10,"column_start":10,"column_end":14},"name":"Side","qualname":"::side::Side","value":"pub enum Side { Client, Server, }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428}],"decl_id":null,"docs":" Side to generate","sig":null,"attributes":[{"value":"/ Side to generate","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83336,"byte_end":83356,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83357,"byte_end":83360,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This enum represents the two possible sides of","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83361,"byte_end":83411,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/ the protocol API that can be generated.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83412,"byte_end":83455,"line_start":8,"line_end":8,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4439,"byte_end":4452,"line_start":121,"line_end":121,"column_start":8,"column_end":21},"name":"generate_code","qualname":"::generate_code","value":"pub fn generate_code<P1: AsRef<Path>, P2: AsRef<Path>>(P1, P2, Side)","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol","sig":null,"attributes":[{"value":"/ Generate the code for a protocol","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4061,"byte_end":4097,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4098,"byte_end":4101,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4102,"byte_end":4156,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4157,"byte_end":4160,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4161,"byte_end":4170,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4171,"byte_end":4174,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4175,"byte_end":4264,"line_start":117,"line_end":117,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4265,"byte_end":4308,"line_start":118,"line_end":118,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4309,"byte_end":4367,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4368,"byte_end":4431,"line_start":120,"line_end":120,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":288},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4947,"byte_end":4983,"line_start":131,"line_end":131,"column_start":8,"column_end":44},"name":"generate_code_with_destructor_events","qualname":"::generate_code_with_destructor_events","value":"pub fn generate_code_with_destructor_events<P1: AsRef<Path>,\nP2: AsRef<Path>>(P1, P2, Side, &[(&str, &str)])","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol with aditionnal destructor events","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4593,"byte_end":4663,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4664,"byte_end":4667,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code`, but allows you to additionnaly specify some events","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4668,"byte_end":4747,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4748,"byte_end":4831,"line_start":128,"line_end":128,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files but instead written in the","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4832,"byte_end":4911,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/ protocol documentation.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":4912,"byte_end":4939,"line_start":130,"line_end":130,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":291},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6232,"byte_end":6253,"line_start":171,"line_end":171,"column_start":8,"column_end":29},"name":"generate_code_streams","qualname":"::generate_code_streams","value":"pub fn generate_code_streams<P1: Read, P2: Write>(P1, &mut P2, Side)","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5845,"byte_end":5900,"line_start":162,"line_end":162,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5901,"byte_end":5904,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5905,"byte_end":5982,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5983,"byte_end":5986,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5987,"byte_end":5996,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":5997,"byte_end":6000,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6001,"byte_end":6073,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6074,"byte_end":6160,"line_start":169,"line_end":169,"column_start":1,"column_end":87}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6161,"byte_end":6224,"line_start":170,"line_end":170,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6789,"byte_end":6833,"line_start":181,"line_end":181,"column_start":8,"column_end":52},"name":"generate_code_streams_with_destructor_events","qualname":"::generate_code_streams_with_destructor_events","value":"pub fn generate_code_streams_with_destructor_events<P1: Read,\nP2: Write>(P1, &mut P2, Side, &[(&str, &str)])","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams with aditionnal destructor events","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6401,"byte_end":6490,"line_start":175,"line_end":175,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6491,"byte_end":6494,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code_streams`, but allows you to additionnaly specify some events","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6495,"byte_end":6582,"line_start":177,"line_end":177,"column_start":1,"column_end":88}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6583,"byte_end":6666,"line_start":178,"line_end":178,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files but instead written in the documentation","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6667,"byte_end":6760,"line_start":179,"line_end":179,"column_start":1,"column_end":94}},{"value":"/ of the protocol.","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/lib.rs","byte_start":6761,"byte_end":6781,"line_start":180,"line_end":180,"column_start":1,"column_end":21}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/common_gen.rs","byte_start":36961,"byte_end":36965,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":79435,"byte_end":79443,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":79818,"byte_end":79827,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":80306,"byte_end":80313,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":80991,"byte_end":80994,"line_start":81,"line_end":81,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":81455,"byte_end":81459,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":81864,"byte_end":81869,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":82170,"byte_end":82174,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83613,"byte_end":83617,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/common_gen.rs","byte_start":36961,"byte_end":36965,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":375},"to":{"krate":23,"index":117}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":79435,"byte_end":79443,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":79818,"byte_end":79827,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":80306,"byte_end":80313,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":80991,"byte_end":80994,"line_start":81,"line_end":81,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":81455,"byte_end":81459,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":81864,"byte_end":81869,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/protocol.rs","byte_start":82170,"byte_end":82174,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/buzz/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.29.4/src/side.rs","byte_start":83613,"byte_end":83617,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}}]}